queries.ctds.assignment.details = SELECT  CLF_SGS_ID as Id, CLF_COMP_ID as compId, CLF_ULM_NO as Policynumber, CLF_CUST_ID as CustomerId, CLF_REFNO as ClaimRefNo, CLF_CID as RequestReceivedDate, CLF_CLD as ServiceFromDate, CLF_LOSS_DESC as Description, CLF_CLMNT_CUST_YN as ClaimantIsCustomer, CLF_REP_BY_CUST_YN as ReportedByCustomer, CLF_STATUS as Status, CLF_PROD_ID as ProductId, CLF_COB_ID as CobId, CLF_POL_FMD as PolicyFromDate, CLF_POL_TOD as PolicyToDate, CLF_CLC_NO as ClaimNo, CLF_CRU as CreatedBy, CLF_CRD as CreatedDate, CLF_REP_MTHD as ReportedByMethod, CLF_REP_MTHD_DESC as ReportedByMethodDesc, CLF_REP_BY as ReportedByInsured, CLF_REP_BY_ID as ReportedById, CLF_DEPT_ID as DeptId, CLF_DIVN_ID as DivisionId, CLF_INSRD_ID as InsuredId, CLF_SRC_TYP as SourceType, CLF_REP_DIVN_ID as UserDivision, CLF_MOD_TYP as ModuleType, CLMF_PROVIDER as ProviderId, CLMF_REQ_TYP as RequestType, CLMF_ENC_TYP as EncounterType, CLMF_VOUCH_NO as VoucherNumber, CLMF_REQ_AMT as RequestedAmt , CLMF_REQ_AMT_BC as RequestAmountBaseCurrency, CLMF_CURR_ID as CurrencyId, CLMF_PY_GWAY_REF as PaymentGatewayRef,CLMF_PY_GWAY_TYP as PaymentWay, CLMF_PRV_CLM_REQ_ID as PrevReqId, CLR_RISK_ID as RiskId, CLR_RISK_TYP as RiskType, CLR_RISK_COB as RiskCob, CLR_RISK_FMD as RiskFromDate, CLR_RISK_TOD as RiskToDate, CLR_RISK_AMND_IDX as RiskAmendmentId, CLR_RISK_FLEX1 as RiskFlex1, CLR_RISK_FLEX2 as RiskFlex2, CLR_RISK_FLEX3 as RiskFlex3, CLR_RISK_FLEX4 as RiskFlex4, CLR_RISK_FLEX5 as RiskFlex5, CLR_RISK_FLEX6 as RiskFlex6, CLR_RISK_FLEX7 as RiskFlex7, CLR_RISK_FLEX8 as RiskFlex8, CLR_RISK_FLEX9 as RiskFlex9, CLR_RISK_FLEX10 as RiskFlex10, CLR_RISK_FLEX1 as RiskFlex1, CLR_RISK_FLEX1 as RiskFlex1, CLR_RISK_CUR_X_RATE as RiskCurrencyExchangeRate, CLR_RISK_CUR_ID as RiskCurrencyId, CLR_RISK_FLEXDESC1 as RiskFlexDescription1, CLR_RISK_FLEXDESC2 as RiskFlexDescription2, CLR_RISK_FLEXDESC3 as RiskFlexDescription3, CLR_RISK_FLEXDESC4 as RiskFlexDescription4, CLR_RISK_FLEXDESC5 as RiskFlexDescription5, CLR_RISK_FLEXDESC6 as RiskFlexDescription6, CLR_RISK_FLEXDESC7 as RiskFlexDescription7, CLR_RISK_FLEXDESC8 as RiskFlexDescription8, CLR_RISK_FLEXDESC9 as RiskFlexDescription9, CLR_RISK_FLEXDESC10 as RiskFlexDescription10, CLMR_MEMBER_ID as MemberNumber, CLMR_MEMBER_NAME as MemberName, CLMR_MEMBER_TYP as MemberType, CLMR_MEMBER_CATG as MemberCategory, CLMR_MEMBER_DOB as MemberDOB, CLMR_DEPENDENT_YN as IsDependent, CLMR_PARENT_ID as ParentId, CLMR_RELATION as Relation, CLMR_NATIONAL_ID as NationalId, CLMR_UID_ID as UIDId, CLMR_PASSPORT_NO as PassportNumber, CLMR_TPA_CARD as CardNumber, CLMR_CARD_RCVD_DT as CardReceivedDate, CLMR_PY_MOB_NO as MobileNumber1, CLMR_ALT_MOB_NO as MobileNumber2, CLMR_PY_EMAIL_ID as EmailId1, CLMR_ALT_EMAIL_ID as EmailId2 FROM CTDS_LEVEL_MFNOL,  CTDS_LEVEL_FNOL, CTDS_LEVEL_MR, CTDS_LEVEL_R  WHERE  CLF_SGS_ID = CLMF_CLF_SGS_ID   AND CLF_SGS_ID = CLMR_SGS_ID   AND CLF_SGS_ID = CLR_CLF_SGS_ID   AND CLF_MOD_TYP IN('GM') <CRITERIA>

queries.ctds.assignment.member.details = SELECT ULME_MFNAME as FirstName, ULME_MMNAME as MiddleName, ULME_MLNAME as LastName, ULME_ADDRESS_1 as Address1, ULME_ADDRESS_2 as Address2, ULME_ADDRESS_3 as Address3, ULME_ADDRESS_4 as Address4, ULME_PIN_CODE as Pincode,  ULME_CITY as City, ULME_STATE as State,  ULME_COUNTRY_ID as Country,  ULME_LAND_NO as PhoneNumber, ULME_MOB_NO as MobileNumber, ULME_EMAIL_ID as EmailId,  ULME_MEMBER_NAME as MemberName, ULME_GENDER as Gender, ULME_RELATION as Relation,  ULME_NATIONALITY as Nationality FROM IDS_LEVEL_M, UHDS_LEVEL_RMEMBERS, IDS_LEVEL_R ILR1, upds_level_m WHERE ILM_COMP_ID = :compId AND  ILM_NO = :policyNumber  AND ULME_COMP_ID  = ILM_COMP_ID  AND ulm_NO = ILM_NO AND ulm_amnd_ver_no = ILM_END_IDX and  ULME_AMND_VER_NO  = ILM_END_IDX AND ulm_no=ilm_no and ilm_no = ILR_ILM_NO and ILM_END_IDX = ILR_END_IDX and ulme_ulr_id = ilr_risk_id and ulm_amnd_ver_no=ulme_amnd_ver_no and ulm_sgs_id = ulme_ulm_sgs_id  and ulm_amnd_ver_no = ilm_end_idx and ULME_MEMBER_ID  = :memberNumber  AND ULME_ULR_ID = ILR1.ILR_RISK_ID  AND ILR1.ILR_COMP_ID = ILM_COMP_ID  AND ILR1.ILR_ILM_NO = ILM_NO  AND ILR1.ILR_END_IDX = ILM_END_IDX  AND ILM_STATUS NOT IN('CAN','EXP') AND ILR1.ILR_END_IDX = (SELECT MAX(ILR2.ILR_END_IDX) FROM IDS_LEVEL_R ILR2 WHERE ILR2.ILR_COMP_ID = ILR1.ILR_COMP_ID  AND ILR2.ILR_ILM_NO = ILR1.ILR_ILM_NO  )

queries.ctds.details.assignment.by.status = SELECT  CLF_SGS_ID as Id, CLF_COMP_ID as compId, CLF_ULM_NO as Policynumber, CLF_CUST_ID as CustomerId, CLF_REFNO as ClaimRefNo, CLF_CID as RequestReceivedDate, CLF_CLD as ServiceFromDate, CLF_LOSS_DESC as Description, CLF_CLMNT_CUST_YN as ClaimantIsCustomer, CLF_REP_BY_CUST_YN as ReportedByCustomer, CLC_STATUS as Status, CLF_PROD_ID as ProductId, CLF_COB_ID as CobId, CLF_POL_FMD as PolicyFromDate, CLF_POL_TOD as PolicyToDate, CLF_CLC_NO as ClaimNo, CLF_CRU as CreatedBy, CLF_CRD as CreatedDate, CLF_REP_MTHD as ReportedByMethod, CLF_REP_MTHD_DESC as ReportedByMethodDesc, CLF_REP_BY as ReportedByInsured, CLF_REP_BY_ID as ReportedById, CLF_DEPT_ID as DeptId, CLF_DIVN_ID as DivisionId, CLF_INSRD_ID as InsuredId, CLF_SRC_TYP as SourceType, CLF_REP_DIVN_ID as UserDivision, CLF_MOD_TYP as ModuleType, CLMF_PROVIDER as ProviderId, CLMF_REQ_TYP as RequestType, CLMF_ENC_TYP as EncounterType, CLMF_VOUCH_NO as VoucherNumber, CLMF_REQ_AMT as RequestedAmt , CLMF_REQ_AMT_BC as RequestAmountBaseCurrency, CLMF_CURR_ID as CurrencyId, CLMF_PY_GWAY_REF as PaymentGatewayRef,CLMF_PY_GWAY_TYP as PaymentWay, CLMF_PRV_CLM_REQ_ID as PrevReqId, CLR_RISK_ID as RiskId, CLR_RISK_TYP as RiskType, CLR_RISK_COB as RiskCob, CLR_RISK_FMD as RiskFromDate, CLR_RISK_TOD as RiskToDate, CLR_RISK_AMND_IDX as RiskAmendmentId, CLR_RISK_FLEX1 as RiskFlex1, CLR_RISK_FLEX2 as RiskFlex2, CLR_RISK_FLEX3 as RiskFlex3, CLR_RISK_FLEX4 as RiskFlex4, CLR_RISK_FLEX5 as RiskFlex5, CLR_RISK_FLEX6 as RiskFlex6, CLR_RISK_FLEX7 as RiskFlex7, CLR_RISK_FLEX8 as RiskFlex8, CLR_RISK_FLEX9 as RiskFlex9, CLR_RISK_FLEX10 as RiskFlex10, CLR_RISK_FLEX1 as RiskFlex1, CLR_RISK_FLEX1 as RiskFlex1, CLR_RISK_CUR_X_RATE as RiskCurrencyExchangeRate, CLR_RISK_CUR_ID as RiskCurrencyId, CLR_RISK_FLEXDESC1 as RiskFlexDescription1, CLR_RISK_FLEXDESC2 as RiskFlexDescription2, CLR_RISK_FLEXDESC3 as RiskFlexDescription3, CLR_RISK_FLEXDESC4 as RiskFlexDescription4, CLR_RISK_FLEXDESC5 as RiskFlexDescription5, CLR_RISK_FLEXDESC6 as RiskFlexDescription6, CLR_RISK_FLEXDESC7 as RiskFlexDescription7, CLR_RISK_FLEXDESC8 as RiskFlexDescription8, CLR_RISK_FLEXDESC9 as RiskFlexDescription9, CLR_RISK_FLEXDESC10 as RiskFlexDescription10, CLMR_MEMBER_ID as MemberNumber, CLMR_MEMBER_NAME as MemberName, CLMR_MEMBER_TYP as MemberType, CLMR_MEMBER_CATG as MemberCategory, CLMR_MEMBER_DOB as MemberDOB, CLMR_DEPENDENT_YN as IsDependent, CLMR_PARENT_ID as ParentId, CLMR_RELATION as Relation, CLMR_NATIONAL_ID as NationalId, CLMR_UID_ID as UIDId, CLMR_PASSPORT_NO as PassportNumber, CLMR_TPA_CARD as CardNumber, CLMR_CARD_RCVD_DT as CardReceivedDate, CLMR_PY_MOB_NO as MobileNumber1, CLMR_ALT_MOB_NO as MobileNumber2, CLMR_PY_EMAIL_ID as EmailId1, CLMR_ALT_EMAIL_ID as EmailId2 FROM CTDS_LEVEL_MFNOL,  CTDS_LEVEL_FNOL, CTDS_LEVEL_MR, CTDS_LEVEL_R,CTDS_LEVEL_C  WHERE  CLF_SGS_ID = CLMF_CLF_SGS_ID   AND CLF_SGS_ID = CLMR_SGS_ID   AND CLF_SGS_ID = CLR_CLF_SGS_ID AND CLF_SGS_ID = CLC_CLF_SGS_ID   AND CLF_MOD_TYP IN('GM') <CRITERIA>

queries.ctds.details.assignment.status.criteria = AND UPPER(CLC_STATUS) = UPPER(:Status) 

queries.ctds.details.assignment.claimnumber.empty.criteria = AND CLF_CLC_NO IS NULL AND CLF_STATUS = 'CC'

queries.ctds.details.assignment.claimnumber.criteria = AND UPPER(CLF_CLC_NO) = UPPER(:claimNumber) 

queries.ctds.details.assignment.reqreceivedfrom.criteria = AND CLF_CID > trunc(TO_DATE(:reqReceivedFrom,'yyyy-MM-dd'))

queries.ctds.details.assignment.reqreceivedto.criteria = AND CLF_CID < trunc(TO_DATE(:reqReceivedTo,'yyyy-MM-dd')) 

queries.ctds.details.assignment.reqreceivedfromto.criteria = AND CLF_CID BETWEEN trunc(TO_DATE(:reqReceivedFrom,'yyyy-MM-dd')) AND trunc(TO_DATE(:reqReceivedTo,'yyyy-MM-dd')) 

queries.ctds.details.assignment.approvedby.criteria = 

queries.ctds.details.assignment.assigneduser.criteria = 

queries.insert.ctdslevelc = INSERT INTO CTDS_LEVEL_C (CLC_CLF_SGS_ID,CLC_NO,CLC_CLF_NO,CLC_CID,CLC_CLD,CLC_LOSS_DESC,CLC_ULM_NO,CLC_STATUS,CLC_CUST_ID, CLC_PROD_ID,CLC_CRU,CLC_CRD,CLC_COMP_ID,CLC_DIVN_ID,CLC_DEPT_ID ) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

queries.update.ctdslevelc = UPDATE CTDS_LEVEL_C SET CLC_NO = ?, CLC_CLF_NO = ?, CLC_CID = ?, CLC_CLD = ?, CLC_LOSS_DESC = ?, CLC_ULM_NO = ?, CLC_STATUS = ?, CLC_CUST_ID = ?,  CLC_PROD_ID = ?, CLC_CRU = ?, CLC_CRD = ?, CLC_COMP_ID = ?, CLC_DIVN_ID = ?, CLC_DEPT_ID WHERE CLC_CLF_SGS_ID = ?

queries.insert.ctdslevelcp = INSERT INTO CTDS_LEVEL_CP (CLCP_CLF_SGS_ID,CLCP_FIRST_NAME,CLCP_MIDDLE_NAME,CLCP_LAST_NAME,CLCP_ADDRESS1,CLCP_ADDRESS2,CLCP_ADDRESS3,CLCP_ADDRESS4,CLCP_PIN_CODE,CLCP_CITY,CLCP_STATE,CLCP_COUNTRY_ID,CLCP_PY_PHONE_NO,CLCP_PY_MOBILE_NO,CLCP_ID,CLCP_TYP,CLCP_EMAIL_ID,CLCP_NAME,CLCP_REC_TYP,CLCP_GENDER,CLCP_CRD,CLCP_CUST_TYP,CLCP_CRU,CLCP_RELN,CLCP_NATIONALITY) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

queries.update.ctdslevelcp = UPDATE CTDS_LEVEL_CP SET CLCP_FIRST_NAME = ?, CLCP_MIDDLE_NAME = ?, CLCP_LAST_NAME = ?, CLCP_ADDRESS1 = ?, CLCP_ADDRESS2 = ?, CLCP_ADDRESS3 = ?, CLCP_ADDRESS4 = ?, CLCP_PIN_CODE = ?, CLCP_CITY = ?, CLCP_STATE = ?, CLCP_COUNTRY_ID = ?, CLCP_PY_PHONE_NO = ?, CLCP_PY_MOBILE_NO = ?, CLCP_ID = ?, CLCP_TYP = ?, CLCP_EMAIL_ID = ?, CLCP_NAME = ?, CLCP_REC_TYP = ?, CLCP_GENDER = ?, CLCP_CRD = ?, CLCP_CUST_TYP = ?, CLCP_CRU = ?, CLCP_RELN = ?, CLCP_NATIONALITY = ? WHERE CLCP_CLF_SGS_ID = ?

queries.insert.ctdslevelcp.sequence.name = SEQ_CLCP_ID

queries.insert.ctdslevelsl = INSERT INTO CTDS_LEVEL_SL(CLS_CLF_SGS_ID,CLS_RISK_ID,CLS_UPD_ID,CLS_TYP,CLG_ALLOC_TYP,CLG_ALLOCD,CLG_DUED,CLG_JOB_STATUS,CLG_SYS_UPD_ID,CLS_UPPD_ID,CLS_SYS_UPPD_ID,CLS_REMARKS,CLS_CVR_ID,CLS_CLCP_ID,CLS_ASSGN_TYP,CLS_SGS_ID,CLS_REV_NO,CLS_CRU,CLS_CRD,CLS_ULS_ID,CLS_REC_TYP)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

queries.update.ctdslevelsl = UPDATE CTDS_LEVEL_SL SET CLS_RISK_ID = ?, CLS_UPD_ID = ?, CLS_TYP = ?, CLG_ALLOC_TYP = ?, CLG_ALLOCD = ?, CLG_DUED = ?, CLG_JOB_STATUS = ?, CLG_SYS_UPD_ID = ?, CLS_UPPD_ID = ?, CLS_SYS_UPPD_ID = ?, CLS_REMARKS = ?, CLS_CVR_ID = ?, CLS_CLCP_ID = ?, CLS_ASSGN_TYP = ?, CLS_SGS_ID = ?, CLS_REV_NO = ?, CLS_ULS_ID = ?, CLS_REC_TYP = ? WHERE CLS_CLF_SGS_ID = ?

queries.insert.chdslevelsl = INSERT INTO CHDS_LEVEL_SL(CLS_CLF_SGS_ID,CLS_RISK_ID,CLS_UPD_ID,CLS_TYP,CLG_ALLOC_TYP,CLG_ALLOCD,CLG_DUED,CLG_JOB_STATUS,CLG_SYS_UPD_ID,CLS_UPPD_ID,CLS_SYS_UPPD_ID,CLS_REMARKS,CLS_CVR_ID,CLS_CLCP_ID,CLS_ASSGN_TYP,CLS_SGS_ID,CLS_REV_NO,CLS_CRU,CLS_CRD,CLS_ULS_ID)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

queries.insert.ctdslevelsl.sequence.name = SEQ_CLSL_SGS_ID

queries.ctds.details.assignment.claimnumber.empty.criteria.orderby = order by CLF_CRD desc

queries.ctds.details.assignment.claimnumber.status.criteria.orderby = order by CLC_NO desc


