reimbursement.queries.ctds.details = SELECT  CLF_ULM_NO as Policynumber,CLMR_MEMBER_ID as MemberNumber,CLMR_TPA_CARD as CardNumber,CLMF_VOUCH_NO as VoucherNumber,CLMR_PY_MOB_NO as MobileNumber1,CLMR_ALT_MOB_NO as MobileNumber2,CLMR_PY_EMAIL_ID as EmailId1,CLMR_ALT_EMAIL_ID as EmailId2,CLMR_MEMBER_NAME as MemberName,CLMR_UID_ID as EmiratesId,CLMF_REQ_TYP as RequestType,CLMF_ENC_TYP as EncounterType,CLF_CID as RequestReceivedDate,CLF_CLD as ServiceFromDate,CLMF_PY_GWAY_REF as PaymentRefNo,CLMF_PY_GWAY_TYP as PaymentWay,CLF_SGS_ID as Id, CLF_REFNO as ClaimRefNo,CLMF_PRV_CLM_REQ_ID as PrevReqNo,CLMF_REQ_AMT as RequestedAmt FROM CTDS_LEVEL_MFNOL, CTDS_LEVEL_FNOL,CTDS_LEVEL_MR WHERE UPPER(CLF_COMP_ID) = UPPER(:compId) AND CLF_SGS_ID = CLMF_CLF_SGS_ID  AND CLF_SGS_ID = CLMR_SGS_ID  AND CLF_MOD_TYP IN('GM') <CRITERIA>

reimbursement.queries.ctds.details.policynumber.criteria= AND UPPER(CLF_ULM_NO) = UPPER(:policyNumber)

reimbursement.queries.ctds.details.membernumber.criteria= AND UPPER(CLMR_MEMBER_ID) = UPPER(:memberNumber)

reimbursement.queries.ctds.details.vouchernumber.criteria= AND UPPER(CLMF_VOUCH_NO) = UPPER(:voucherNumber)

reimbursement.queries.ctds.details.cardnumber.criteria= AND UPPER(CLMR_TPA_CARD) = UPPER(:cardNumber)

reimbursement.queries.ctds.details.emiratesid.criteria= AND UPPER(CLMR_UID_ID) = UPPER(:emiratesId)

reimbursement.queries.ctds.details.id = SELECT  CLF_SGS_ID as Id, CLF_COMP_ID as compId, CLF_ULM_NO as Policynumber, CLF_CUST_ID as CustomerId, CLF_REFNO as ClaimRefNo, CLF_CID as RequestReceivedDate, CLF_CLD as ServiceFromDate, CLF_LOSS_DESC as Description, CLF_CLMNT_CUST_YN as ClaimantIsCustomer, CLF_REP_BY_CUST_YN as ReportedByCustomer, CLF_STATUS as Status, CLF_PROD_ID as ProductId, CLF_COB_ID as CobId, CLF_POL_FMD as PolicyFromDate, CLF_POL_TOD as PolicyToDate, CLF_CLC_NO as ClaimNo, CLF_CRU as CreatedBy, CLF_CRD as CreatedDate, CLF_REP_MTHD as ReportedByMethod, CLF_REP_MTHD_DESC as ReportedByMethodDesc, CLF_REP_BY as ReportedByInsured, CLF_REP_BY_ID as ReportedById, CLF_DEPT_ID as DeptId, CLF_DIVN_ID as DivisionId, CLF_INSRD_ID as InsuredId, CLF_SRC_TYP as SourceType, CLF_REP_DIVN_ID as UserDivision, CLF_MOD_TYP as ModuleType, CLMF_PROVIDER as ProviderId, CLMF_REQ_TYP as RequestType, CLMF_ENC_TYP as EncounterType, CLMF_VOUCH_NO as VoucherNumber, CLMF_REQ_AMT as RequestedAmt , CLMF_REQ_AMT_BC as RequestAmountBaseCurrency, CLMF_CURR_ID as CurrencyId, CLMF_PY_GWAY_REF as PaymentGatewayRef,CLMF_PY_GWAY_TYP as PaymentWay, CLMF_PRV_CLM_REQ_ID as PrevReqId, CLR_RISK_ID as RiskId, CLR_RISK_TYP as RiskType, CLR_RISK_COB as RiskCob, CLR_RISK_FMD as RiskFromDate, CLR_RISK_TOD as RiskToDate, CLR_RISK_AMND_IDX as RiskAmendmentId, CLR_RISK_FLEX1 as RiskFlex1, CLR_RISK_FLEX2 as RiskFlex2, CLR_RISK_FLEX3 as RiskFlex3, CLR_RISK_FLEX4 as RiskFlex4, CLR_RISK_FLEX5 as RiskFlex5, CLR_RISK_FLEX6 as RiskFlex6, CLR_RISK_FLEX7 as RiskFlex7, CLR_RISK_FLEX8 as RiskFlex8, CLR_RISK_FLEX9 as RiskFlex9, CLR_RISK_FLEX10 as RiskFlex10, CLR_RISK_FLEX1 as RiskFlex1, CLR_RISK_FLEX1 as RiskFlex1, CLR_RISK_CUR_X_RATE as RiskCurrencyExchangeRate, CLR_RISK_CUR_ID as RiskCurrencyId, CLR_RISK_FLEXDESC1 as RiskFlexDescription1, CLR_RISK_FLEXDESC2 as RiskFlexDescription2, CLR_RISK_FLEXDESC3 as RiskFlexDescription3, CLR_RISK_FLEXDESC4 as RiskFlexDescription4, CLR_RISK_FLEXDESC5 as RiskFlexDescription5, CLR_RISK_FLEXDESC6 as RiskFlexDescription6, CLR_RISK_FLEXDESC7 as RiskFlexDescription7, CLR_RISK_FLEXDESC8 as RiskFlexDescription8, CLR_RISK_FLEXDESC9 as RiskFlexDescription9, CLR_RISK_FLEXDESC10 as RiskFlexDescription10, CLMR_MEMBER_ID as MemberNumber, CLMR_MEMBER_NAME as MemberName, CLMR_MEMBER_TYP as MemberType, CLMR_MEMBER_CATG as MemberCategory, CLMR_MEMBER_DOB as MemberDOB, CLMR_DEPENDENT_YN as IsDependent, CLMR_PARENT_ID as ParentId, CLMR_RELATION as Relation, CLMR_NATIONAL_ID as NationalId, CLMR_UID_ID as UIDId, CLMR_PASSPORT_NO as PassportNumber, CLMR_TPA_CARD as CardNumber, CLMR_CARD_RCVD_DT as CardReceivedDate, CLMR_PY_MOB_NO as MobileNumber1, CLMR_ALT_MOB_NO as MobileNumber2, CLMR_PY_EMAIL_ID as EmailId1, CLMR_ALT_EMAIL_ID as EmailId2 FROM CTDS_LEVEL_MFNOL,  CTDS_LEVEL_FNOL, CTDS_LEVEL_MR, CTDS_LEVEL_R  WHERE  CLF_SGS_ID = :id AND  CLF_SGS_ID = CLMF_CLF_SGS_ID   AND CLF_SGS_ID = CLMR_SGS_ID   AND CLF_SGS_ID = CLR_CLF_SGS_ID   AND CLF_MOD_TYP IN('GM')
                                                  
reimbursement.queries.details = SELECT ULME_ULR_ID as RiskId, ILR1.ILR_RISK_TYP as RiskType, ILR1.ILR_COB_ID as CobId, ILR1.ILR_EFF_FMD as RiskFromDate,   ILR1.ILR_EFF_TOD as RiskToDate,     ILR1.ILR_END_IDX as RiskAmndVerId,  ILR1.ILR_FLEX1 as RiskFlex1,        ILR1.ILR_FLEX2 as RiskFlex2,        ILR1.ILR_FLEX3 as RiskFlex3,        ILR1.ILR_FLEX4 as RiskFlex4,        ILR1.ILR_FLEX5 as RiskFlex5,        ILR1.ILR_FLEX6 as RiskFlex6,        ILR1.ILR_FLEX7 as RiskFlex7,        ILR1.ILR_FLEX8 as RiskFlex8,        ILR1.ILR_FLEX9 as RiskFlex9,        ILR1.ILR_FLEX10 as RiskFlex10,      ILR1.ILR_FLEX1_DESC as RiskFlexDesc1,  ILR1.ILR_FLEX2_DESC as RiskFlexDesc2,  ILR1.ILR_FLEX3_DESC as RiskFlexDesc3,  ILR1.ILR_FLEX4_DESC as RiskFlexDesc4,  ILR1.ILR_FLEX5_DESC as RiskFlexDesc5,  ILR1.ILR_FLEX6_DESC as RiskFlexDesc6,  ILR1.ILR_FLEX7_DESC as RiskFlexDesc7,  ILR1.ILR_FLEX8_DESC as RiskFlexDesc8,  ILR1.ILR_FLEX9_DESC as RiskFlexDesc9,  ILR1.ILR_FLEX10_DESC as RiskFlexDesc10, ILM_CUST_ID as CustomerId,  ILM_PROD_ID as ProductId,   ILM_POL_FMD as PolicyFromDate,  ILM_POL_TOD as PolicyToDate,  ILM_DEPT_ID as DeptId,  ILM_DIVN_ID as DivisionId,  ILM_INSRD_ID as InsuredId,  ULME_MEMBER_ID as MemberNumber, ULME_MEMBER_NAME as MemberName, ULME_vip_cust_yn as MemberType, ULME_OCCUPATION_CATG as MemberCategory, ULME_DOB as MemberDOB,   ULME_DEPENDENT_YN as IsDependent,  ULME_RELATION as RelationWithPrimary,  ULME_NATIONALITY as NationalId, NVL(ULME_ID_REF_1,ULME_ID_REF_2) as EmiratesId, ULME_TPA_CARD as CardNumber, ULME_MOB_NO as Mobile1,   ULME_EMAIL_ID as EmailId1,   ILM_NO as PolicyNumber FROM IDS_LEVEL_M, UHDS_LEVEL_RMEMBERS, IDS_LEVEL_R ILR1, upds_level_m WHERE   UPPER(ILM_COMP_ID)  = UPPER(:compId)   AND  UPPER(ILM_NO) =  UPPER(:policyNumber)    AND ULME_COMP_ID    = ILM_COMP_ID  AND ulm_NO     = ILM_NO   AND ulm_amnd_ver_no = ILM_END_IDX and  ULME_AMND_VER_NO    = ILM_END_IDX AND ulm_no=ilm_no and ilm_no = ILR_ILM_NO and ILM_END_IDX = ILR_END_IDX and ulme_ulr_id = ilr_risk_id and ulm_amnd_ver_no=ulme_amnd_ver_no and ulm_sgs_id = ulme_ulm_sgs_id  and ulm_amnd_ver_no = ilm_end_idx and UPPER(ULME_MEMBER_ID)  = UPPER(:memberNumber)    AND ULME_ULR_ID     = ILR1.ILR_RISK_ID  AND ILR1.ILR_COMP_ID     = ILM_COMP_ID  AND ILR1.ILR_ILM_NO      = ILM_NO       AND ILR1.ILR_END_IDX     = ILM_END_IDX  AND ILM_STATUS NOT IN('CAN','EXP') AND ILR1.ILR_END_IDX = (SELECT MAX(ILR2.ILR_END_IDX) FROM IDS_LEVEL_R ILR2 WHERE ILR2.ILR_COMP_ID = ILR1.ILR_COMP_ID  AND ILR2.ILR_ILM_NO = ILR1.ILR_ILM_NO  )

reimbursement.queries.insert.sequence=SEQ_CLF_SGS_ID

reimbursement.queries.insert.procedure.claimrefno=CLK_GENERAL.UWP_GENERATE_DOC_NO

reimbursement.queries.insert.ctdslevelfnol = INSERT INTO CTDS_LEVEL_FNOL (CLF_SGS_ID ,CLF_COMP_ID ,CLF_ULM_NO ,CLF_CUST_ID ,CLF_REFNO ,CLF_CID ,CLF_CLD ,CLF_LOSS_DESC ,CLF_CLMNT_CUST_YN ,CLF_REP_BY_CUST_YN ,CLF_STATUS ,CLF_PROD_ID ,CLF_COB_ID ,CLF_POL_FMD ,CLF_POL_TOD ,CLF_CRU ,CLF_CRD ,CLF_REP_MTHD ,CLF_REP_MTHD_DESC ,CLF_REP_BY ,CLF_REP_BY_ID ,CLF_DIVN_ID ,CLF_DEPT_ID ,CLF_INSRD_ID ,CLF_SRC_TYP ,CLF_REP_DIVN_ID ,CLF_MOD_TYP)  VALUES(  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ? )

reimbursement.queries.insert.ctdslevelmfnol = INSERT INTO CTDS_LEVEL_MFNOL (CLMF_CLF_SGS_ID, CLMF_PROVIDER,CLMF_REQ_TYP,CLMF_ENC_TYP,CLMF_VOUCH_NO,CLMF_REQ_AMT,CLMF_REQ_AMT_BC,CLMF_CURR_ID,CLMF_PY_GWAY_REF,CLMF_PRV_CLM_REQ_ID,CLMF_ECNT_FAC_ID,CLMF_PY_GWAY_TYP)  VALUES (?,?,?,?,?,?,?,?,?,?,?,?)

reimbursement.queries.update.ctdslevelmfnol = UPDATE CTDS_LEVEL_MFNOL SET CLMF_REQ_TYP=?,CLMF_ENC_TYP=?,CLMF_VOUCH_NO=?,CLMF_REQ_AMT=?,CLMF_REQ_AMT_BC=?,CLMF_PY_GWAY_REF=?,CLMF_PRV_CLM_REQ_ID=?,CLMF_PY_GWAY_TYP=? WHERE CLMF_CLF_SGS_ID=?

reimbursement.queries.insert.ctdslevelr = INSERT INTO CTDS_LEVEL_R (CLR_CLF_SGS_ID,CLR_RISK_ID,CLR_RISK_TYP,CLR_ULM_NO,CLR_RISK_COB,CLR_RISK_FMD,CLR_RISK_TOD,CLR_RISK_AMND_IDX,CLR_RISK_FLEX1,CLR_RISK_FLEX2,CLR_RISK_FLEX3,CLR_RISK_FLEX4,CLR_RISK_FLEX5,CLR_RISK_FLEX6,CLR_RISK_FLEX7,CLR_RISK_FLEX8,CLR_RISK_FLEX9,CLR_RISK_FLEX10,CLR_RISK_CUR_X_RATE,CLR_RISK_CUR_ID,CLR_RISK_FLEXDESC1,CLR_RISK_FLEXDESC2,CLR_RISK_FLEXDESC3,CLR_RISK_FLEXDESC4,CLR_RISK_FLEXDESC5,CLR_RISK_FLEXDESC6,CLR_RISK_FLEXDESC7,CLR_RISK_FLEXDESC8,CLR_RISK_FLEXDESC9,CLR_RISK_FLEXDESC10,CLR_SRC_TYP,CLR_COMP_ID)  VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

reimbursement.queries.insert.ctdslevelmr = INSERT INTO CTDS_LEVEL_MR (CLMR_SGS_ID,CLMR_RISK_ID,CLMR_MEMBER_ID,CLMR_MEMBER_NAME,CLMR_MEMBER_TYP,CLMR_MEMBER_CATG,CLMR_MEMBER_DOB,CLMR_DEPENDENT_YN,CLMR_PARENT_ID, CLMR_RELATION, CLMR_NATIONAL_ID,CLMR_UID_ID,CLMR_PASSPORT_NO,CLMR_TPA_CARD,CLMR_CARD_RCVD_DT, CLMR_PY_MOB_NO,CLMR_PY_EMAIL_ID,CLMR_ALT_MOB_NO, CLMR_ALT_EMAIL_ID) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

reimbursement.queries.insert.tdsleveld = INSERT INTO TDS_LEVEL_D ( TLD_TXN_REF_NO,  TLD_DOC_ID,  TLD_DOC_DESC,  TLD_DOC_STATUS,  TLD_RECD_DT,  TLD_DOC_NAME,  TLD_MOD_TYP,  TLD_TXN_REF,  TLD_SGS_ID,  TLD_CRU,  TLD_CRD,  TLD_COMP_ID,  TLD_VER_NO,  TLD_REC_TYP,TLD_STYP,TLD_REMARKS,TLD_STYP_DESC) VALUES ( ?,  ?, ?, ?, ?,?,  ?, ?, ?, ?, ?, ?,  ?, ?,?,?,?)

reimbursement.queries.details.tdsleveld = SELECT TLD_DOC_ID as DocTypeId,TLD_STYP as DocTypeDesc, TLD_STYP_DESC as DocContentType,TLD_REMARKS as DocPath,TLD_DOC_DESC as Description, TLD_DOC_NAME as DocName ,TLD_CRU as UploadedBy,TLD_CRD as UploadedDate from TDS_LEVEL_D WHERE TLD_TXN_REF_NO =:id AND TLD_MOD_TYP = 'GM'

reimbursement.queries.delete.tdsleveld = DELETE FROM TDS_LEVEL_D WHERE TLD_TXN_REF_NO =:id AND TLD_DOC_ID = :DocTypeId AND TLD_REMARKS =:DocPath AND TLD_DOC_NAME =:DocName AND TLD_MOD_TYP = 'GM'

reimbursement.queries.update.tdsleveld = UPDATE TDS_LEVEL_D SET TLD_DOC_DESC = :description WHERE TLD_TXN_REF_NO =:id AND TLD_DOC_ID = :DocTypeId AND TLD_REMARKS =:DocPath AND TLD_DOC_NAME =:DocName AND TLD_MOD_TYP = 'GM'

#Assignment Queries
reimbursement.queries.ctds.assignment.details = SELECT  CLF_SGS_ID as Id, CLF_COMP_ID as compId, CLF_ULM_NO as Policynumber, CLF_CUST_ID as CustomerId, CLF_REFNO as ClaimRefNo, CLF_CID as RequestReceivedDate, CLF_CLD as ServiceFromDate, CLF_LOSS_DESC as Description, CLF_CLMNT_CUST_YN as ClaimantIsCustomer, CLF_REP_BY_CUST_YN as ReportedByCustomer, CLF_STATUS as Status, CLF_PROD_ID as ProductId, CLF_COB_ID as CobId, CLF_POL_FMD as PolicyFromDate, CLF_POL_TOD as PolicyToDate, CLF_CLC_NO as ClaimNo, CLF_CRU as CreatedBy, CLF_CRD as CreatedDate, CLF_REP_MTHD as ReportedByMethod, CLF_REP_MTHD_DESC as ReportedByMethodDesc, CLF_REP_BY as ReportedByInsured, CLF_REP_BY_ID as ReportedById, CLF_DEPT_ID as DeptId, CLF_DIVN_ID as DivisionId, CLF_INSRD_ID as InsuredId, CLF_SRC_TYP as SourceType, CLF_REP_DIVN_ID as UserDivision, CLF_MOD_TYP as ModuleType, CLMF_PROVIDER as ProviderId, CLMF_REQ_TYP as RequestType, CLMF_ENC_TYP as EncounterType, CLMF_VOUCH_NO as VoucherNumber, CLMF_REQ_AMT as RequestedAmt , CLMF_REQ_AMT_BC as RequestAmountBaseCurrency, CLMF_CURR_ID as CurrencyId, CLMF_PY_GWAY_REF as PaymentGatewayRef,CLMF_PY_GWAY_TYP as PaymentWay, CLMF_PRV_CLM_REQ_ID as PrevReqId, CLR_RISK_ID as RiskId, CLR_RISK_TYP as RiskType, CLR_RISK_COB as RiskCob, CLR_RISK_FMD as RiskFromDate, CLR_RISK_TOD as RiskToDate, CLR_RISK_AMND_IDX as RiskAmendmentId, CLR_RISK_FLEX1 as RiskFlex1, CLR_RISK_FLEX2 as RiskFlex2, CLR_RISK_FLEX3 as RiskFlex3, CLR_RISK_FLEX4 as RiskFlex4, CLR_RISK_FLEX5 as RiskFlex5, CLR_RISK_FLEX6 as RiskFlex6, CLR_RISK_FLEX7 as RiskFlex7, CLR_RISK_FLEX8 as RiskFlex8, CLR_RISK_FLEX9 as RiskFlex9, CLR_RISK_FLEX10 as RiskFlex10, CLR_RISK_FLEX1 as RiskFlex1, CLR_RISK_FLEX1 as RiskFlex1, CLR_RISK_CUR_X_RATE as RiskCurrencyExchangeRate, CLR_RISK_CUR_ID as RiskCurrencyId, CLR_RISK_FLEXDESC1 as RiskFlexDescription1, CLR_RISK_FLEXDESC2 as RiskFlexDescription2, CLR_RISK_FLEXDESC3 as RiskFlexDescription3, CLR_RISK_FLEXDESC4 as RiskFlexDescription4, CLR_RISK_FLEXDESC5 as RiskFlexDescription5, CLR_RISK_FLEXDESC6 as RiskFlexDescription6, CLR_RISK_FLEXDESC7 as RiskFlexDescription7, CLR_RISK_FLEXDESC8 as RiskFlexDescription8, CLR_RISK_FLEXDESC9 as RiskFlexDescription9, CLR_RISK_FLEXDESC10 as RiskFlexDescription10, CLMR_MEMBER_ID as MemberNumber, CLMR_MEMBER_NAME as MemberName, CLMR_MEMBER_TYP as MemberType, CLMR_MEMBER_CATG as MemberCategory, CLMR_MEMBER_DOB as MemberDOB, CLMR_DEPENDENT_YN as IsDependent, CLMR_PARENT_ID as ParentId, CLMR_RELATION as Relation, CLMR_NATIONAL_ID as NationalId, CLMR_UID_ID as UIDId, CLMR_PASSPORT_NO as PassportNumber, CLMR_TPA_CARD as CardNumber, CLMR_CARD_RCVD_DT as CardReceivedDate, CLMR_PY_MOB_NO as MobileNumber1, CLMR_ALT_MOB_NO as MobileNumber2, CLMR_PY_EMAIL_ID as EmailId1, CLMR_ALT_EMAIL_ID as EmailId2 FROM CTDS_LEVEL_MFNOL,  CTDS_LEVEL_FNOL, CTDS_LEVEL_MR, CTDS_LEVEL_R  WHERE  CLF_SGS_ID = CLMF_CLF_SGS_ID   AND CLF_SGS_ID = CLMR_SGS_ID   AND CLF_SGS_ID = CLR_CLF_SGS_ID   AND CLF_MOD_TYP IN('GM') <CRITERIA>

reimbursement.queries.ctds.assignment.member.details = SELECT ULME_MFNAME as FirstName, ULME_MMNAME as MiddleName, ULME_MLNAME as LastName, ULME_ADDRESS_1 as Address1, ULME_ADDRESS_2 as Address2, ULME_ADDRESS_3 as Address3, ULME_ADDRESS_4 as Address4, ULME_PIN_CODE as Pincode,  ULME_CITY as City, ULME_STATE as State,  ULME_COUNTRY_ID as Country,  ULME_LAND_NO as PhoneNumber, ULME_MOB_NO as MobileNumber, ULME_EMAIL_ID as EmailId,  ULME_MEMBER_NAME as MemberName, ULME_GENDER as Gender, ULME_RELATION as Relation,  ULME_NATIONALITY as Nationality FROM IDS_LEVEL_M, UHDS_LEVEL_RMEMBERS, IDS_LEVEL_R ILR1, upds_level_m WHERE ILM_COMP_ID = :compId AND  ILM_NO = :policyNumber  AND ULME_COMP_ID  = ILM_COMP_ID  AND ulm_NO = ILM_NO AND ulm_amnd_ver_no = ILM_END_IDX and  ULME_AMND_VER_NO  = ILM_END_IDX AND ulm_no=ilm_no and ilm_no = ILR_ILM_NO and ILM_END_IDX = ILR_END_IDX and ulme_ulr_id = ilr_risk_id and ulm_amnd_ver_no=ulme_amnd_ver_no and ulm_sgs_id = ulme_ulm_sgs_id  and ulm_amnd_ver_no = ilm_end_idx and ULME_MEMBER_ID  = :memberNumber  AND ULME_ULR_ID = ILR1.ILR_RISK_ID  AND ILR1.ILR_COMP_ID = ILM_COMP_ID  AND ILR1.ILR_ILM_NO = ILM_NO  AND ILR1.ILR_END_IDX = ILM_END_IDX  AND ILM_STATUS NOT IN('CAN','EXP') AND ILR1.ILR_END_IDX = (SELECT MAX(ILR2.ILR_END_IDX) FROM IDS_LEVEL_R ILR2 WHERE ILR2.ILR_COMP_ID = ILR1.ILR_COMP_ID  AND ILR2.ILR_ILM_NO = ILR1.ILR_ILM_NO  )


reimbursement.queries.ctds.details.assignment.claimnumber.criteria = AND UPPER(CLF_CLC_NO) = UPPER(:claimNumber) 

reimbursement.queries.ctds.details.assignment.reqreceivedfrom.criteria = AND CLF_CID > trunc(TO_DATE(:reqReceivedFrom,'yyyy-MM-dd'))

reimbursement.queries.ctds.details.assignment.reqreceivedto.criteria = AND CLF_CID < trunc(TO_DATE(:reqReceivedTo,'yyyy-MM-dd')) 

reimbursement.queries.ctds.details.assignment.reqreceivedfromto.criteria = AND CLF_CID BETWEEN trunc(TO_DATE(:reqReceivedFrom,'yyyy-MM-dd')) AND trunc(TO_DATE(:reqReceivedTo,'yyyy-MM-dd')) 

reimbursement.queries.ctds.details.assignment.approvedby.criteria = 

reimbursement.queries.ctds.details.assignment.assigneduser.criteria = 

reimbursement.queries.insert.ctdslevelc = INSERT INTO CTDS_LEVEL_C (CLC_CLF_SGS_ID,CLC_NO,CLC_CLF_NO,CLC_CID,CLC_CLD,CLC_LOSS_DESC,CLC_ULM_NO,CLC_STATUS,CLC_CUST_ID, CLC_PROD_ID,CLC_CRU,CLC_CRD,CLC_COMP_ID,CLC_DIVN_ID,CLC_DEPT_ID ) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

reimbursement.queries.update.ctdslevelc = UPDATE CTDS_LEVEL_C SET CLC_NO = ?, CLC_CLF_NO = ?, CLC_CID = ?, CLC_CLD = ?, CLC_LOSS_DESC = ?, CLC_ULM_NO = ?, CLC_STATUS = ?, CLC_CUST_ID = ?,  CLC_PROD_ID = ?, CLC_CRU = ?, CLC_CRD = ?, CLC_COMP_ID = ?, CLC_DIVN_ID = ?, CLC_DEPT_ID WHERE CLC_CLF_SGS_ID = ?

reimbursement.queries.insert.ctdslevelcp = INSERT INTO CTDS_LEVEL_CP (CLCP_CLF_SGS_ID,CLCP_FIRST_NAME,CLCP_MIDDLE_NAME,CLCP_LAST_NAME,CLCP_ADDRESS1,CLCP_ADDRESS2,CLCP_ADDRESS3,CLCP_ADDRESS4,CLCP_PIN_CODE,CLCP_CITY,CLCP_STATE,CLCP_COUNTRY_ID,CLCP_PY_PHONE_NO,CLCP_PY_MOBILE_NO,CLCP_ID,CLCP_TYP,CLCP_EMAIL_ID,CLCP_NAME,CLCP_REC_TYP,CLCP_GENDER,CLCP_CRD,CLCP_CUST_TYP,CLCP_CRU,CLCP_RELN,CLCP_NATIONALITY) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

reimbursement.queries.update.ctdslevelcp = UPDATE CTDS_LEVEL_CP SET CLCP_FIRST_NAME = ?, CLCP_MIDDLE_NAME = ?, CLCP_LAST_NAME = ?, CLCP_ADDRESS1 = ?, CLCP_ADDRESS2 = ?, CLCP_ADDRESS3 = ?, CLCP_ADDRESS4 = ?, CLCP_PIN_CODE = ?, CLCP_CITY = ?, CLCP_STATE = ?, CLCP_COUNTRY_ID = ?, CLCP_PY_PHONE_NO = ?, CLCP_PY_MOBILE_NO = ?, CLCP_ID = ?, CLCP_TYP = ?, CLCP_EMAIL_ID = ?, CLCP_NAME = ?, CLCP_REC_TYP = ?, CLCP_GENDER = ?, CLCP_CRD = ?, CLCP_CUST_TYP = ?, CLCP_CRU = ?, CLCP_RELN = ?, CLCP_NATIONALITY = ? WHERE CLCP_CLF_SGS_ID = ?

reimbursement.queries.insert.ctdslevelcp.sequence.name = SEQ_CLCP_ID

reimbursement.queries.insert.ctdslevelsl = INSERT INTO CTDS_LEVEL_SL(CLS_CLF_SGS_ID,CLS_RISK_ID,CLS_UPD_ID,CLS_TYP,CLG_ALLOC_TYP,CLG_ALLOCD,CLG_DUED,CLG_JOB_STATUS,CLG_SYS_UPD_ID,CLS_UPPD_ID,CLS_SYS_UPPD_ID,CLS_REMARKS,CLS_CVR_ID,CLS_CLCP_ID,CLS_ASSGN_TYP,CLS_SGS_ID,CLS_REV_NO,CLS_CRU,CLS_CRD,CLS_ULS_ID,CLS_REC_TYP)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

reimbursement.queries.update.ctdslevelsl = UPDATE CTDS_LEVEL_SL SET CLS_RISK_ID = ?, CLS_UPD_ID = ?, CLS_TYP = ?, CLG_ALLOC_TYP = ?, CLG_ALLOCD = ?, CLG_DUED = ?, CLG_JOB_STATUS = ?, CLG_SYS_UPD_ID = ?, CLS_UPPD_ID = ?, CLS_SYS_UPPD_ID = ?, CLS_REMARKS = ?, CLS_CVR_ID = ?, CLS_CLCP_ID = ?, CLS_ASSGN_TYP = ?, CLS_SGS_ID = ?, CLS_REV_NO = ?, CLS_ULS_ID = ?, CLS_REC_TYP = ? WHERE CLS_CLF_SGS_ID = ?

reimbursement.queries.insert.chdslevelsl = INSERT INTO CHDS_LEVEL_SL(CLS_CLF_SGS_ID,CLS_RISK_ID,CLS_UPD_ID,CLS_TYP,CLG_ALLOC_TYP,CLG_ALLOCD,CLG_DUED,CLG_JOB_STATUS,CLG_SYS_UPD_ID,CLS_UPPD_ID,CLS_SYS_UPPD_ID,CLS_REMARKS,CLS_CVR_ID,CLS_CLCP_ID,CLS_ASSGN_TYP,CLS_SGS_ID,CLS_REV_NO,CLS_CRU,CLS_CRD,CLS_ULS_ID)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

reimbursement.queries.insert.ctdslevelsl.sequence.name = SEQ_CLSL_SGS_ID

reimbursement.queries.insert.ctdslevelmdiag = INSERT INTO CTDS_LEVEL_MDIAG (CLMD_CLF_SGS_ID,CLMD_DIAG_ID,CLMD_DIAG_TYP,CLMD_CRU,CLMD_CRD,CLMD_UPU,CLMD_UPD) VALUES  (?,?,?,?,?,?,?)

reimbursement.queries.update.ctdslevelmdiag = UPDATE CTDS_LEVEL_MDIAG SET CLMD_DIAG_ID = ?, CLMD_DIAG_TYP = ?, CLMD_UPU = ?, CLMD_UPD = ? WHERE CLMD_CLF_SGS_ID = ?

reimbursement.queries.insert.ctdslevelmsrvc = INSERT INTO CTDS_LEVEL_MSRVC (CLMS_SGS_ID,CLMS_CLF_SGS_ID,CLMS_SR_NO,CLMS_TRMT_FMD,CLMS_TRMT_TOD,CLMS_TRMT_DAYS,CLMS_SRVC_TYP,CLMS_SRVC_ID,CLMS_BNF_ID,CLMS_SUB_BNF_ID,CLMS_CURR_ID,CLMS_REQ_AMT,CLMS_REQ_AMT_BC,CLMS_DED_AMT,CLMS_DED_AMT_BC,CLMS_MAN_DED_AMT,CLMS_MAN_DED_AMT_BC,CLMS_PENALTY_AMT,CLMS_PENALTY_AMT_BC,CLMS_SUGG_AMT,CLMS_SUGG_AMT_BC,CLMS_APPRV_AMT,CLMS_APPRV_AMT_BC,CLMS_REJ_ID,CLMS_REJ_AMT,CLMS_REJ_AMT_BC,CLMS_STATUS,CLMS_STATUS_DT,CLMS_INT_REMARKS,CLMS_EXT_REMARKS,CLMS_LOSS_TYP,CLMS_EST_TYP,CLMS_CVR_ID,CLMS_SMI_ID,CLMS_LOSS_ID,CLMS_CRU,CLMS_CRD,CLMS_UPU,CLMS_UPD,CLMS_APU,CLMS_APD,CLMS_CURR_TYP) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

reimbursement.queries.update.ctdslevelmsrvc = UPDATE CTDS_LEVEL_MSRVC set CLMS_CLF_SGS_ID = ?, CLMS_SR_NO = ?, CLMS_TRMT_FMD  = ?, CLMS_TRMT_TOD = ?, CLMS_TRMT_DAYS = ?, CLMS_SRVC_TYP = ?, CLMS_SRVC_ID = ?, CLMS_BNF_ID = ?, CLMS_SUB_BNF_ID = ?, CLMS_CURR_ID = ?, CLMS_REQ_AMT = ?, CLMS_REQ_AMT_BC = ?, CLMS_DED_AMT = ?, CLMS_DED_AMT_BC = ?, CLMS_MAN_DED_AMT = ?, CLMS_MAN_DED_AMT_BC = ?, CLMS_PENALTY_AMT = ?, CLMS_PENALTY_AMT_BC = ?, CLMS_SUGG_AMT = ?, CLMS_SUGG_AMT_BC = ?, CLMS_APPRV_AMT = ?, CLMS_APPRV_AMT_BC = ?, CLMS_REJ_ID = ?, CLMS_REJ_AMT = ?, CLMS_REJ_AMT_BC = ?, CLMS_STATUS = ?, CLMS_STATUS_DT = ?, CLMS_INT_REMARKS = ?, CLMS_EXT_REMARKS = ?, CLMS_LOSS_TYP = ?, CLMS_EST_TYP = ?, CLMS_CVR_ID = ?, CLMS_SMI_ID = ?, CLMS_LOSS_ID = ?, CLMS_CRU = ?, CLMS_UPU = ?, CLMS_UPD = ?, CLMS_APU = ?, CLMS_APD = ?, CLMS_CURR_TYP = ? WHERE CLMS_SGS_ID = ?

reimbursement.queries.details.ctdslevelmsrvc.version = SELECT CLMS_SR_NO AS version FROM CTDS_LEVEL_MSRVC WHERE CLMS_SGS_ID = ?

reimbursement.queries.insert.chdslevelmsrvc = INSERT INTO CHDS_LEVEL_MSRVC (CLMS_SGS_ID,CLMS_CLF_SGS_ID,CLMS_SR_NO,CLMS_TRMT_FMD,CLMS_TRMT_TOD,CLMS_TRMT_DAYS,CLMS_SRVC_TYP,CLMS_SRVC_ID,CLMS_BNF_ID,CLMS_SUB_BNF_ID,CLMS_CURR_ID,CLMS_REQ_AMT,CLMS_REQ_AMT_BC,CLMS_DED_AMT,CLMS_DED_AMT_BC,CLMS_MAN_DED_AMT,CLMS_MAN_DED_AMT_BC,CLMS_PENALTY_AMT,CLMS_PENALTY_AMT_BC,CLMS_SUGG_AMT,CLMS_SUGG_AMT_BC,CLMS_APPRV_AMT,CLMS_APPRV_AMT_BC,CLMS_REJ_ID,CLMS_REJ_AMT,CLMS_REJ_AMT_BC,CLMS_STATUS,CLMS_STATUS_DT,CLMS_INT_REMARKS,CLMS_EXT_REMARKS,CLMS_LOSS_TYP,CLMS_EST_TYP,CLMS_CVR_ID,CLMS_SMI_ID,CLMS_LOSS_ID,CLMS_CRU,CLMS_CRD,CLMS_UPU,CLMS_UPD,CLMS_APU,CLMS_APD,CLMS_CURR_TYP) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

reimbursement.queries.insert.ctdslevelmc = INSERT INTO CTDS_LEVEL_MC (CLMC_SGS_ID,CLC_NO,CLMC_CLM_REQ_ID,CLMC_CLM_TYP,CLMC_CLM_COUNTRY,CLMC_CLM_CONDN,CLMC_CLM_STATUS_RSN) VALUES  (?,?,?,?,?,?,?)

reimbursement.queries.update.ctdslevelmc = UPDATE CTDS_LEVEL_MC SET CLC_NO = ?, CLMC_CLM_REQ_ID = ?, CLMC_CLM_TYP = ?, CLMC_CLM_COUNTRY = ?, CLMC_CLM_CONDN = ?, CLMC_CLM_STATUS_RSN = ? WHERE CLMC_SGS_ID = ?

reimbursement.queries.insert.ctdslevelmsrvc.sequence.name = SEQ_CLMS_SGS_ID

reimbursement.queries.processing.details = SELECT msrvc.CLMS_SGS_ID as Reimbursementprocessid,msrvc.CLMS_CLF_SGS_ID as Claimsregistrationid,msrvc.CLMS_SR_NO as Claimssequenceno,msrvc.CLMS_TRMT_FMD as Treatmentfromdate,msrvc.CLMS_TRMT_TOD as Treatmenttodate,msrvc.CLMS_TRMT_DAYS as Nooftreamentdays,msrvc.CLMS_SRVC_TYP as Servicetype,msrvc.CLMS_SRVC_ID as Serviceid,msrvc.CLMS_BNF_ID as Benefitid,msrvc.CLMS_SUB_BNF_ID as Subbenefitid,msrvc.CLMS_CURR_ID as Currencyid,msrvc.CLMS_REQ_AMT as Requestedamount,msrvc.CLMS_REQ_AMT_BC as Requestedamountbc,msrvc.CLMS_DED_AMT as Policydeductibleamount,msrvc.CLMS_DED_AMT_BC as Policydeductibleamountbc,msrvc.CLMS_MAN_DED_AMT as Manualdeductionamount,msrvc.CLMS_MAN_DED_AMT_BC as Manualdeductionamountbc,msrvc.CLMS_PENALTY_AMT as Penaltyamount,msrvc.CLMS_PENALTY_AMT_BC as Penaltyamountbc,msrvc.CLMS_SUGG_AMT as Suggestedamout,msrvc.CLMS_SUGG_AMT_BC as Suggestedamoutbc,msrvc.CLMS_APPRV_AMT as Approvedamount,msrvc.CLMS_APPRV_AMT_BC as Approvedamountbc,msrvc.CLMS_REJ_ID as Internalrejectioncode,msrvc.CLMS_REJ_AMT as Rejectedamount,msrvc.CLMS_REJ_AMT_BC as Rejectedamountbc,msrvc.CLMS_STATUS as Claimstatus,msrvc.CLMS_STATUS_DT as Statusdate,msrvc.CLMS_INT_REMARKS as Internalremarks,msrvc.CLMS_EXT_REMARKS as Externalremarks,msrvc.CLMS_LOSS_TYP as Losstype,msrvc.CLMS_EST_TYP as Esttype,msrvc.CLMS_CVR_ID,msrvc.CLMS_SMI_ID,msrvc.CLMS_LOSS_ID,msrvc.CLMS_CRU as Createdby,msrvc.CLMS_CRD as Createddate,msrvc.CLMS_UPU as Updatedby,msrvc.CLMS_UPD as Updateddate,msrvc.CLMS_APU as Approvedby,msrvc.CLMS_APD as Approveddate,msrvc.CLMS_CURR_TYP as Currencytype,mc.CLC_NO as Claimnumber,mc.CLMC_CLM_REQ_ID as Requestnumber,mc.CLMC_CLM_TYP as Claimtype, mc.CLMC_CLM_COUNTRY as Eventcountry,mc.CLMC_CLM_CONDN as Claimcondition,mc.CLMC_CLM_STATUS_RSN as Claimstatusreason,diag.CLMD_DIAG_ID as Diagid,diag.CLMD_DIAG_TYP as Diagtype,diag.CLMD_CRU as Diagcreatedby,diag.CLMD_CRD as Diagcreateddate,diag.CLMD_UPU as Diagupdatedby,diag.CLMD_UPD as DiagUpdateddate FROM CTDS_LEVEL_MSRVC msrvc,CTDS_LEVEL_MC mc ,CTDS_LEVEL_MDIAG diag WHERE  mc.CLMC_SGS_ID = msrvc.CLMS_CLF_SGS_ID AND diag.CLMD_CLF_SGS_ID = msrvc.CLMS_CLF_SGS_ID <CRITERIA>
 
reimbursement.queries.processing.details.id.criteria = AND msrvc.CLMS_SGS_ID = :id 

reimbursement.queries.processing.details.claimnumber.criteria = AND UPPER(CLC_NO) = UPPER(:claimNumber) 

reimbursement.queries.processing.details.requestnumber.criteria = AND UPPER(CLMC_CLM_REQ_ID) = UPPER(:requestNumber) 

reimbursement.queries.insert.ctdslevele = INSERT INTO CTDS_LEVEL_E ( CLE_SGS_ID, CLE_CLF_SGS_ID, CLE_SR_NO, CLE_RISK_ID, CLE_CVR_ID, CLE_SMI_ID, CLE_LOSS_ID, CLE_EST_TYP, CLE_ESTD, CLE_EST_AMT, CLE_CUST_ID, CLE_CRU, CLE_OS_AMT, CLE_CLS_SGS_ID,  CLE_TYP, CLE_CUR_X_RATE, CLE_CUR_ID, CLE_OS_AMT_BC, CLE_EST_AMT_BC,  CLE_LOSS_TYP,  CLE_APU, CLE_APD, CLE_UPD, CLE_UPU, CLE_COMP_ID ) VALUES (?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?,?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 
reimbursement.queries.insert.chdslevele = INSERT INTO CHDS_LEVEL_E ( CLE_SGS_ID, CLE_CLF_SGS_ID, CLE_SR_NO, CLE_RISK_ID, CLE_CVR_ID, CLE_SMI_ID, CLE_LOSS_ID, CLE_EST_TYP, CLE_ESTD, CLE_REV_EST_AMT, CLE_OLD_EST_AMT,CLE_CUST_ID, CLE_CRU, CLE_OS_AMT, CLE_CLS_SGS_ID, CLE_TYP, CLE_OS_AMT_BC, CLE_CUR_ID, CLE_CUR_X_RATE, CLE_REV_EST_AMT_BC, CLE_OLD_EST_AMT_BC, CLE_APU, CLE_APD, CLE_UPD, CLE_UPU, CLE_LOSS_TYP, CLE_COMP_ID ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )

reimbursement.queries.insert.ctdslevele.sequence.name = SEQUENCE FROM SEQ_CLE_SGS_ID
 
 
  
 
 
