
medical.claim.general.queries.ids.membernumbers = select <RESULTSET> from (SELECT distinct <RESULTSET> FROM IDS_LEVEL_M, UHDS_LEVEL_RMEMBERS WHERE UPPER(ILM_COMP_ID) = UPPER(:compId) AND UPPER(ILM_NO) like UPPER(:policyNumber) AND ULME_COMP_ID = ILM_COMP_ID AND ULME_AMND_VER_NO = ILM_END_IDX AND UPPER(ULME_MEMBER_ID) like UPPER(:memberNumber) AND ILM_STATUS NOT IN('CAN','EXP')) WHERE rownum <=10 

medical.claim.general.queries.ids.column.membernumbers = ULME_MEMBER_ID

medical.claim.general.queries.ids.policynumbers = select  <RESULTSET> from (SELECT distinct <RESULTSET> FROM IDS_LEVEL_M, UHDS_LEVEL_RMEMBERS WHERE ILM_COMP_ID = :compId AND ILM_NO like :policyNumber AND ULME_COMP_ID = ILM_COMP_ID AND ULME_AMND_VER_NO = ILM_END_IDX AND ULME_MEMBER_ID like :memberNumber AND ILM_STATUS NOT IN('CAN','EXP')) WHERE rownum <=10

medical.claim.general.queries.ids.column.policynumbers = ILM_NO

medical.claim.general.queries.providerdetails = select UPD_ID as ProviderId from UDS_PARTY_DTLS where UPD_CUST_CATG_ID ='062'

medical.claim.general.queries.currencydetail = SELECT UCER_UC_BAS_CURR_ID as BaseCurrency,UCER_UC_EXCHG_CURR_ID as ExchangeCurrency, UCER_RATE as ExchangeRate FROM IDS_LEVEL_M ILM1, uds_curr_exg_rate WHERE UPPER(ILM1.ILM_NO) = UPPER(:policyNumber) AND UPPER(ILM1.ILM_COMP_ID) = UPPER(:compId) AND ILM1.ILM_END_IDX = (SELECT MAX(ILM2.ILM_END_IDX) FROM IDS_LEVEL_M ILM2 WHERE ILM2.ILM_COMP_ID = ILM1.ILM_COMP_ID  AND ILM2.ILM_NO = ILM1.ILM_NO ) AND ILM_PRM_CURR_ID = UCER_UC_EXCHG_CURR_ID  AND UCER_RATE_TYP = 'B'  AND TRUNC(SYSDATE) BETWEEN TRUNC(UCER_FMD) AND TRUNC(UCER_TOD)

medical.claim.general.queries.user.division = SELECT AUDD_UD_DIVN_ID as DivisionId FROM ADS_USER_DIVN_DEPT WHERE UPPER(AUDD_COMP_ID) = UPPER(:compId) AND UPPER(AUDD_AU_ID) = UPPER(:userName)

medical.claim.general.queries.cob.detail =  SELECT UPAC_UC_COB_ID  as CobId FROM UDS_COB, UDS_PROD_APPL_COB WHERE UPPER(UC_COMP_ID) = UPPER(:compId) AND UPAC_COMP_ID = UC_COMP_ID AND UPAC_UP_PROD_ID = (SELECT DISTINCT ILM_PROD_ID FROM IDS_LEVEL_M WHERE UPPER(ILM_COMP_ID) = UPPER(:compId) AND UPPER(ILM_NO) = UPPER(:policyNumber)) AND UPAC_UC_COB_ID = UC_COB_ID AND UC_COB_TYP = 'GM'

medical.claim.general.queries.universal.currencies = SELECT UCER_UC_BAS_CURR_ID as BaseCurrency,UCER_UC_EXCHG_CURR_ID as ExchangeCurrency, UCER_RATE as ExchangeRate FROM uds_curr_exg_rate where TRUNC(SYSDATE) BETWEEN TRUNC(UCER_FMD) AND TRUNC(UCER_TOD)  AND UCER_RATE_TYP = 'B' AND UPPER(UCER_COMP_ID) = UPPER(:compId)

medical.claim.general.queries.countryids = select distinct UAD_COUNTRY_ID from UDS_ADDRESS_DEFN where UAD_COMP_ID = :compId AND UAD_COUNTRY_ID is not null
##################################################################################
medical.claim.general.queries.uiddefinitiontype = select UID_ID,UID_DESC from UDS_ID_DEFN where UID_COMP_ID =:compId and UID_ID_TYP =:uidType

medical.claim.general.queries.uid.encountertype = MED_CLM_ENC_TYP

medical.claim.general.queries.uid.reportbytype = CONT_TYP

medical.claim.general.queries.uid.requesttype = MED_CLM_REQ_TYP

medical.claim.general.queries.uid.paymenttype = MED_PY_REF

medical.claim.general.queries.uid.documenttype = UPL_DOC_LIST

medical.claim.general.queries.uid.statustype = STATUS

medical.claim.general.queries.uid.sourcetype = MED_CLM_SRC_TYP

medical.claim.general.queries.uid.claimstatusreason = MED_CLM_STATUS_RSN

medical.claim.general.queries.uid.losstype = LOSS_TYP

medical.claim.general.queries.uid.esttype = EST_TYP

medical.claim.general.queries.uid.diagtype = MED_CLM_DIAG_TYP

medical.claim.general.queries.uid.claimtype = MED_CLM_REQ_TYP

medical.claim.general.queries.uid.claimcondition = MED_CLM_CONDN


##################################################################################
medical.claim.general.queries.ctds.lists = select <RESULTSET> from (SELECT distinct <RESULTSET> FROM CTDS_LEVEL_MFNOL, CTDS_LEVEL_FNOL,CTDS_LEVEL_MR WHERE CLF_COMP_ID = :compId AND (UPPER(CLF_ULM_NO) like UPPER(:policyNumber) OR CLF_ULM_NO IS NULL) AND CLF_SGS_ID = CLMF_CLF_SGS_ID AND CLF_SGS_ID = CLMR_SGS_ID AND (UPPER(CLMR_MEMBER_ID) like UPPER(:memberNumber) OR CLMR_MEMBER_ID IS NULL) AND (UPPER(CLMR_TPA_CARD) like UPPER(:cardNumber) OR CLMR_TPA_CARD IS NULL) AND (UPPER(CLMF_VOUCH_NO) like UPPER(:voucherNumber) OR CLMF_VOUCH_NO IS NULL)  AND (UPPER(CLMR_UID_ID) like UPPER(:emiratesId) OR CLMR_UID_ID IS NULL) AND (UPPER(CLMR_MEMBER_NAME) like UPPER(:memberName) OR CLMR_MEMBER_NAME IS NULL) AND CLF_MOD_TYP IN('GM')) WHERE rownum <=10

medical.claim.general.queries.ctds.column.cardnumbers = CLMR_TPA_CARD

medical.claim.general.queries.ctds.column.emiratesid = CLMR_UID_ID

medical.claim.general.queries.ctds.column.vouchernumbers =  CLMF_VOUCH_NO

medical.claim.general.queries.ctds.column.membernames = CLMR_MEMBER_NAME

medical.claim.general.queries.ctds.column.policynumbers =  CLF_ULM_NO

medical.claim.general.queries.ctds.column.membernumbers =  CLMR_MEMBER_ID

medical.claim.general.queries.ctds.column.claimnumbers =  CLF_CLC_NO

medical.claim.general.queries.user.lists = select AU_ID UserId,AU_NAME UserName from ADS_USER where AU_TYP <> 'D' and UPPER(AU_COMP_ID) = UPPER(:compId) AND UPPER(AU_NAME) like UPPER(:userName) AND ROWNUM <= 10

medical.claim.general.queries.service.code.details = SELECT CMSM_BNF_ID AS BenefitId,CMSM_SERV_ID AS ServiceCode ,CMSH_SERV_TYP_ID AS ServiceTypeId,CMSH_DESC AS ServiceName ,CMSM_SUB_BNF_ID as SubBenefitId FROM CUDS_MSERVICE_MAP,CUDS_MSERVICE_HDR WHERE  UPPER(CMSH_COMP_ID) = UPPER(:compId) AND CMSM_SERV_ID = CMSH_SERV_ID AND CMSM_COMP_ID = CMSH_COMP_ID  AND TRUNC(CMSH_EFF_FMD) >= trunc(TO_DATE(:effFromDate,'yyyy-MM-dd'))  AND TRUNC(CMSH_EFF_TOD) <= trunc(TO_DATE(:effToDate,'yyyy-MM-dd')) 

medical.claim.general.queries.diagnosis.code.details = SELECT UMDH_DIAG_ID as DiagnosisCode , UMDH_DP_NAME as DiagnosisName , UMDH_TYP as DiagnosisType FROM UDS_MDIAG_HDR WHERE UPPER(UMDH_COMP_ID) = UPPER(:compId) AND TRUNC(UMDH_EFF_FMD) >= trunc(TO_DATE(:effFromDate,'yyyy-MM-dd'))  AND TRUNC(UMDH_EFF_TOD) <= trunc(TO_DATE(:effToDate,'yyyy-MM-dd')) 

medical.claim.general.queries.rejection.code.details = SELECT CMR_REJ_ID as RejectionCode,CMR_DESC as RejectionDesc FROM CUDS_MREJECTION WHERE UPPER(CMR_COMP_ID) = UPPER(:compId) AND TRUNC(CMR_EFF_FMD) >= trunc(TO_DATE(:effFromDate,'yyyy-MM-dd'))  AND TRUNC(CMR_EFF_TOD) <= trunc(TO_DATE(:effToDate,'yyyy-MM-dd')) 

